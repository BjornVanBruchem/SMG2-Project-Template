#pragma once

class MapObjActorInitInfo {
public:
	MapObjActorInitInfo();

	void setupHioNode(const char*);
	void setupDefaultPos();
	void setupModelName(const char*);
	void setupConnectToScene();
	void setupBinder(f32, f32);
	void setupEffect(const char*);
	void setupSound(s32, s32);
	void setupSoundPos(JGeometry::TVec3<f32>);
	void setupHitSensor();
	void setupHitSensorParam(u16, f32, const JGeometry::TVec3<f32>&);
	void setupNerve(const Nerve*);
	// void setup58(s32);
	void setupShadow(const char*);
	void setGroupClipping(s32);
	void setupClippingRadius(f32);
	void setupFarClipping(f32);
	void setupProjmapMtx(bool, bool);
	// void setup68(s32);
	void setupRailMover();
	void setupRotator();
	void setupRailRotator();
	void setupRailPosture();
	void setupBaseMtxFollowTarget();
	void setupAffectedScale();
	void setupSeAppear();
	// void setup98();
	void setupNoUseLodCtrl();

	bool mDoDefaultPos;
	bool mDoConnectToScene;
	bool moDoBinder;
	bool mDoEffect;
	bool mDoHitSensor;
	bool mDoShadow;
	u8 _06;
	bool mDoProjmapMtx;
	u8 _08;
	bool mDoRailMover;
	bool mDoRotator;
	bool mDoRailRotator;
	u8 _0C;
	u8 _0D;
	u8 _0E;
	bool mDoRailPosture;
	bool mDoBaseMtxFollowTarget;
	bool mDoAffectedScale;
	bool mMirrorReflection1;
	const char* mModelName;
	const char* mHioNode;
	s16 mMessage;
	f32 mHitSensorRadius;
	JGeometry::TVec3<f32> mHitSensorOff;
	u8 _30;
	f32 mBinder1;
	f32 mBinder2;
	const char* mEffect1;
	const char* mEffect2;
	s32 mSound1;
	s32 mSound2;
	JGeometry::TVec3<f32>* mSoundPos;
	u8 mProjmapMtx1;
	u8 mProjmapMtx2;
	Nerve* mNerve;
	s32 _58;
	s32 mGroupClipping;
	f32 mClippingRadius;
	f32 mFarClipping;
	s32 _68;
	s32 _6C;
	s32 _70;
	bool mDoSeAppear;
	s32 _78;
	f32 _7C;
	bool mMirrorReflection2;
	const char* mShadow;
	f32 _88;
	s32 _8C;
	s32 _90;
	s32 _94;
	bool _98;
	bool mNoUseLodCtrl;
};

namespace MapObjActorUtil {
	void setupInitInfoSimpleMapObj(MapObjActorInitInfo*);
	void setupInitInfoPlanet(MapObjActorInitInfo*);
	void setupInitInfoTypical(MapObjActorInitInfo*, const char*);
	void setupInitInfoColorChangeArg0(MapObjActorInitInfo*, const JMapInfoIter&);
	void setupInitInfoTextureChangeArg1(MapObjActorInitInfo*, const JMapInfoIter&);
	void setupInitInfoShadowLengthArg2(MapObjActorInitInfo*, const JMapInfoIter&);
	void setupInitInfoSeesaw(MapObjActorInitInfo*, const JMapInfoIter&, const char*, f32);
};
